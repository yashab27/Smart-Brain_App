{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Logo/brain.jpg","components/Logo/Logo.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","components/ImagelinkForm/ImagelinkForm.js","App.js","reportWebVitals.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Logo","max","paddingTop","brain","Rank","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","type","onChange","React","Component","Register","onNameChange","ImagelinkForm","onInputChange","onButtonSubmit","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFacelocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFacebox","count","Object","assign","catch","console","log","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb31717d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition=({imageUrl,box})=>{\r\n  return(\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n      <img id=\"inputimage\" alt=\"\" src={imageUrl} width='500px' height='auto'/>\r\n      <div className=\"bounding-box\" style={{ top:  box.topRow,right:box.rightCol,bottom:box.bottomRow,left:box.leftCol }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Navigation=({onRouteChange,isSignedIn})=>{\r\n    if(isSignedIn){\r\n    return(<nav style={{display: 'flex',justifyContent:'flex-end'}}>\r\n      <p onClick={()=>onRouteChange('signout')} className=\"f3 link dim black underline pa3 pointer\">Sign Out</p>\r\n    </nav>\r\n    );\r\n  }else{\r\n    return(<nav style={{display: 'flex',justifyContent:'flex-end'}}>\r\n      <p onClick={()=>onRouteChange('signin')} className=\"f3 link dim black underline pa3 pointer\">Sign In</p>\r\n      <p onClick={()=>onRouteChange('register')} className=\"f3 link dim black underline pa3 pointer\">Register</p>\r\n    </nav>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.e943b488.jpg\";","import React from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\nimport brain from './brain.jpg';\r\nimport './Logo.css';\r\n\r\nconst Logo=()=>{\r\n     return(\r\n        <div className='ma4 mt0'>\r\n         <Tilt className=\"Tilt-img br-2 shadow-5\" style={{max: 55, height: 150,width:150}}>\r\n          <div className=\"Tilt-inner pa3\" >\r\n           <img style={{paddingTop:'5px'}} src={brain} alt=\"logo\"/>\r\n          </div>\r\n         </Tilt>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank=({name,entries})=>{\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n            { `${name},your current enrty count is..`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nclass Signin extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      signInEmail:'',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange=(event)=>{\r\n    this.setState({signInEmail:event.target.value})\r\n  }\r\n  onPasswordChange=(event)=>{\r\n    this.setState({signInPassword:event.target.value})\r\n  }\r\n\r\n\r\n\r\nonSubmitSignIn=()=>{\r\n  fetch('https://warm-woodland-35440.herokuapp.com/signin',{\r\n    method:'post',\r\n    headers:{'Content-Type':'application/json'},\r\n    body:JSON.stringify({\r\n      email:this.state.signInEmail,\r\n      password:this.state.signInPassword\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(user=>{\r\n    if(user.id){\r\n      this.props.loadUser(user)\r\n      this.props.onRouteChange('home');\r\n    }\r\n  })  \r\n}\r\n\r\nrender(){\r\n  const{onRouteChange}=this.props;\r\n  return(\r\n    <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 1-50-m w-25-l mw6 center\">\r\n    <main className=\"pa4 black-80\">\r\n    <div className=\"measure\">\r\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n          <input \r\n          className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"email\" \r\n          name=\"email-address\"  id=\"email-address\"\r\n          onChange={this.onEmailChange}/>\r\n        </div>\r\n        <div className=\"mv3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n          <input \r\n          className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"password\" \r\n          name=\"password\"  id=\"password\"\r\n          onChange={this.onPasswordChange}/>\r\n        </div>\r\n      </fieldset>\r\n      <div className=\"\">\r\n        <input\r\n        onClick={this.onSubmitSignIn}\r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n        type=\"submit\" \r\n        value=\"Sign in\"\r\n        />\r\n      </div>\r\n      <div className=\"lh-copy mt3\">\r\n        <p onClick={()=>onRouteChange('register')} className=\"f6 link dim black db\">Register</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  </article>\r\n  );\r\n}\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nclass Register extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n     email:'',\r\n     password:'',\r\n     name:''\r\n    }\r\n  }\r\n\r\n  onNameChange=(event)=>{\r\n    this.setState({name:event.target.value})\r\n  }\r\n\r\n  onEmailChange=(event)=>{\r\n    this.setState({email:event.target.value})\r\n  }\r\n\r\n  onPasswordChange=(event)=>{\r\n    this.setState({password:event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn=()=>{\r\n    fetch('https://warm-woodland-35440.herokuapp.com/register',{\r\n      method:'post',\r\n      headers:{'Content-Type':'application/json'},\r\n      body:JSON.stringify({\r\n        email:this.state.email,\r\n        password:this.state.password,\r\n        name:this.state.name\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user=>{\r\n      if(user.id){\r\n        this.props.loadUser(user);\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })  \r\n  }\r\n\r\n\r\nrender(){\r\n  return(\r\n    <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 1-50-m w-25-l mw6 center\">\r\n    <main className=\"pa4 black-80\">\r\n    <div className=\"measure\">\r\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n          <input \r\n          className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"text\" \r\n          name=\"name\"  id=\"name\"\r\n         onChange={this.onNameChange} />\r\n        </div>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n          <input \r\n          className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"email\" \r\n          name=\"email-address\"  id=\"email-address\"\r\n         onChange={this.onEmailChange}/>\r\n        </div>\r\n        <div className=\"mv3\">\r\n          <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n          <input \r\n          className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"password\" \r\n          name=\"password\"  id=\"password\"\r\n          onChange={this.onPasswordChange}\r\n          />\r\n        </div>\r\n      </fieldset>\r\n      <div className=\"\">\r\n        <input\r\n        onClick={this.onSubmitSignIn}\r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n        type=\"submit\" \r\n        value=\"Register\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </main>\r\n  </article>\r\n  )\r\n}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './ImagelinkForm.css';\r\n\r\nconst ImagelinkForm=({onInputChange,onButtonSubmit})=>{\r\n  return(\r\n  <div>\r\n    <p className='f3'>\r\n      {'This brain can recognize faces,put an image url and give it a try.THANK YOU!'}\r\n    </p>\r\n    <div className='center'>\r\n    <div className='form center pa4 br3 shadow-5'>\r\n      <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n      <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n      onClick={onButtonSubmit}>Detect</button>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ImagelinkForm;","import React, {Component} from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport ImagelinkForm from './components/ImagelinkForm/ImagelinkForm';\n\n\n\nconst particlesOptions={\n  particles:{\n    number:{\n      value:300,\n      density:{\n        enable:true,\n        value_area:800\n      }\n    }\n  }\n}\n\nconst initialState={\n      input: '',\n      imageUrl: '',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        entries:0,\n        joined:''\n      }\n}\nclass App extends Component{\n  constructor(){\n    super();\n    this.state=initialState;\n  }\n\n\n  loadUser=(data)=>{\n    this.setState({user:{\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      entries:data.entries,\n      joined:data.joined\n    }})\n  }\n\n\n  calculateFacelocation=(data)=>{\n   const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image= document.getElementById('inputimage');\n   const width= Number(image.width);\n   const height=Number(image.height);\n   return {\n     leftCol: clarifaiFace.left_col * width,\n     topRow: clarifaiFace.top_row * height,\n     rightCol: width-(clarifaiFace.right_col * width),\n     bottomRow: height-(clarifaiFace.bottom_row * height)\n   }\n  }\n\n  displayFacebox=(box)=>{\n    this.setState({box:box});\n  }\n\n  onInputChange=(event)=>{\n  this.setState({input:event.target.value});\n  }\n\n onButtonSubmit=()=>{\n  this.setState({imageUrl: this.state.input});\n  fetch('https://warm-woodland-35440.herokuapp.com/imageUrl',{\n    method:'post',\n    headers:{'Content-Type':'application/json'},\n    body:JSON.stringify({\n      input:this.state.input\n    })\n  })\n  .then(response=>response.json())\n    .then(response =>{\n      if(response){\n        fetch('https://warm-woodland-35440.herokuapp.com/image',{\n          method:'put',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n        .then(response=>response.json())\n        .then(count=>{\n          this.setState(Object.assign(this.state.user,{entries: count}))\n        })\n        .catch(console.log)\n       \n      }\n    this.displayFacebox(this.calculateFacelocation(response))})\n    .catch(err=>console.log(err));\n  }\n\n\n  onRouteChange=(route)=>{\n    if(route==='signout'){\n      this.setState(initialState)\n    }else if(route==='home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route});\n  }\n\n  render(){\n    const {isSignedIn,imageUrl,route,box}=this.state;\n    return(\n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions}/>\n       <Navigation \n       isSignedIn={isSignedIn}\n       onRouteChange={this.onRouteChange}/>\n       {route==='home'\n       ?<div>\n       <Logo/> \n       <Rank name={this.state.user.name} \n       entries={this.state.user.entries}/>\n       <ImagelinkForm \n       onInputChange={this.onInputChange} \n       onButtonSubmit={this.onButtonSubmit}/>\n       <FaceRecognition \n       box={box} imageUrl={imageUrl}/></div>\n       :(\n     route==='signin'\n     ?<Signin  loadUser={this.loadUser}  onRouteChange={this.onRouteChange}/>\n     :<Register loadUser={this.loadUser}  onRouteChange={this.onRouteChange}/>\n       ) \n       \n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}